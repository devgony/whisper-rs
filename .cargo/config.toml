[build]
# Force using only baseline x86_64 instructions for broader compatibility
# Explicitly target the oldest x86-64 architecture
rustflags = [
    "-C", "target-cpu=x86-64",
    "-C", "target-feature=-sse3,-ssse3,-sse4.1,-sse4.2,-avx,-avx2,-fma,-f16c,-bmi,-bmi2,-popcnt,-lzcnt",
    "-C", "opt-level=2",
    "-C", "codegen-units=1",
    "-C", "target-feature=+crt-static"
]

[target.x86_64-pc-windows-msvc]
rustflags = [
    "-C", "target-cpu=x86-64",
    "-C", "target-feature=-sse3,-ssse3,-sse4.1,-sse4.2,-avx,-avx2,-fma,-f16c,-bmi,-bmi2,-popcnt,-lzcnt,+crt-static"
]

[env]
# Disable ALL CPU-specific optimizations in the C++ build
# Force pure scalar implementations
CFLAGS = "-O1 -fno-tree-vectorize -fno-slp-vectorize"
CXXFLAGS = "-O1 -fno-tree-vectorize -fno-slp-vectorize"

# Override any system-specific optimizations
CMAKE_C_FLAGS = "-O1 -fno-tree-vectorize"
CMAKE_CXX_FLAGS = "-O1 -fno-tree-vectorize"